/**************************\
  Basic Modal Styles
\**************************/

.modal {
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,
    helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;
}
.form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}
.input {
  display: flex;
  flex-direction: column;
}
.input input,
.input select {
  border: none;
  background: #e6e6e6;
  padding: 5px;
}
.input label {
  font-size: 18px;
  font-weight: 700;
  margin-bottom: 10px;
}

.modalOverlay {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  background: rgba(0, 0, 0, 0.6) !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

.modalContainer {
  background-color: #fff;
  padding: 30px;
  width: 50%;
  max-height: 80vh;
  border-radius: 4px;
  overflow-y: auto;
  box-sizing: border-box;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modalTitle {
  margin-top: 0;
  margin-bottom: 0;
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.25;
  color: #000;
  box-sizing: border-box;
}

.modalClose {
  background: transparent !important;
  color: #000 !important;
  padding: 0 !important;
  margin: 0 !important;
  border: 0;
}

.modalHeader .modalClose:before {
  content: "\2715";
}
.modalFooter {
  display: flex !important;
  justify-content: end !important;
  gap: 10px !important;
}

.modalContent {
  margin-top: 2rem;
  margin-bottom: 2rem;
  line-height: 1.5;
  color: rgba(0, 0, 0, 0.8);
}

.modalBtn {
  font-size: 0.875rem !important;
  padding-left: 1rem !important;
  padding-right: 1rem !important;
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
  background-color: #e6e6e6 !important;
  color: rgba(0, 0, 0, 0.8) !important;
  border-radius: 0.25rem !important;
  border-style: none !important;
  border-width: 0 !important;
  cursor: pointer !important;
  -webkit-appearance: button !important;
  text-transform: none !important;
  overflow: visible !important;
  line-height: 1.15 !important;
  margin: 0 !important;
  will-change: transform !important;
  -moz-osx-font-smoothing: grayscale !important;
  -webkit-backface-visibility: hidden !important;
  backface-visibility: hidden !important;
  -webkit-transform: translateZ(0) !important;
  transform: translateZ(0) !important;
  transition: -webkit-transform 0.25s ease-out !important;
  transition: transform 0.25s ease-out !important;
  transition: transform 0.25s ease-out, -webkit-transform 0.25s ease-out !important;
}

.modalBtn:focus,
.modalBtn:hover {
  -webkit-transform: scale(1.05) !important;
  transform: scale(1.05) !important;
}

.modalBtnPrimary {
  background-color: #000 !important;
  color: #fff !important;
}

/**************************\
    Demo Animation Style
  \**************************/
@keyframes mmfadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes mmfadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes mmslideIn {
  from {
    transform: translateY(15%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes mmslideOut {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-10%);
  }
}

.micromodalSlide {
  display: none;
}

.micromodalSlide.isOpen {
  display: block;
}

.micromodalSlide[aria-hidden="false"] .modalOverlay {
  animation: mmfadeIn 0.3s cubic-bezier(0, 0, 0.2, 1) !important;
}

.micromodalSlide[aria-hidden="false"] .modalContainer {
  animation: mmslideIn 0.3s cubic-bezier(0, 0, 0.2, 1) !important;
}

/* .micromodalSlide[aria-hidden="true"] .modalOverlay {
  animation: mmfadeOut 0.3s cubic-bezier(0, 0, 0.2, 1) !important;
} */

.micromodalSlide[aria-hidden="true"] .modalContainer {
  animation: mmslideOut 0.3s cubic-bezier(0, 0, 0.2, 1) !important;
}

.micromodalSlide .modalContainer,
.micromodalSlide .modalOverlay {
  will-change: transform !important;
}
